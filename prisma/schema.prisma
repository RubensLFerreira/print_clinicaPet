generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model agendamento {
  id            Int         @id @default(autoincrement())
  data          String      @db.VarChar(10)
  horario       DateTime    @db.Time(6)
  telefone      String      @db.VarChar(15)
  observa__o    String?     @map("observação")
  clienteid     Int
  funcionarioid Int
  cliente       cliente     @relation(fields: [clienteid], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "id_fk_cliente")
  funcionario   funcionario @relation(fields: [funcionarioid], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "id_fk_funcionario")
}

model animal {
  id         Int          @id @default(autoincrement())
  nome       String       @db.VarChar(80)
  especie    String       @db.VarChar(50)
  sexo       String       @db.VarChar(20)
  raca       String       @db.VarChar(30)
  peso       String       @db.VarChar(5)
  data_nasc  String       @db.VarChar(10)
  clienteid  Int
  cliente    cliente      @relation(fields: [clienteid], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "id_fk_cliente")
  prontuario prontuario[]
}

model cardeneta {
  id           Int        @id @default(autoincrement())
  data_atual   String     @db.VarChar(15)
  revacinacao  String?    @db.VarChar(15)
  prontuarioid Int
  prontuario   prontuario @relation(fields: [prontuarioid], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "id_fk_prontuario")
}

model cliente {
  id          Int           @id @default(autoincrement())
  nome        String        @db.VarChar(100)
  cpf         String        @unique @db.VarChar(11)
  data_nasc   String        @db.VarChar(10)
  telefone    String        @db.VarChar(10)
  email       String?       @unique @db.VarChar(50)
  endereco    String        @db.VarChar(100)
  bairro      String        @db.VarChar(80)
  numero      String        @db.VarChar(5)
  agendamento agendamento[]
  animal      animal[]
}

model funcionario {
  id          Int           @id @default(autoincrement())
  nome        String        @db.VarChar(50)
  data_nasci  String        @db.VarChar(15)
  email       String        @db.VarChar(50)
  telefone    String        @db.VarChar(15)
  cargo       String        @db.VarChar(30)
  agendamento agendamento[]
}

model prontuario {
  id            Int         @id @default(autoincrement())
  raca          String      @db.VarChar(20)
  data_atual    String      @db.VarChar(15)
  especie       String      @db.VarChar(20)
  porte         String      @db.VarChar(20)
  sexo          String      @db.VarChar(15)
  animalid      Int
  veterinarioid Int
  vacinaid      Int
  animal        animal      @relation(fields: [animalid], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "id_fk_animal")
  vacina        vacina      @relation(fields: [vacinaid], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "id_fk_vacina")
  veterinario   veterinario @relation(fields: [veterinarioid], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "id_fk_veterinario")
  cardeneta     cardeneta[]
}

model vacina {
  id         Int          @id @default(autoincrement())
  nome       String       @db.VarChar(100)
  validade   String       @db.VarChar(10)
  fabricante String       @db.VarChar(150)
  volume     String       @db.VarChar(15)
  prontuario prontuario[]
}

model veterinario {
  id         Int          @id @default(autoincrement())
  nome       String       @db.VarChar(100)
  cpf        String       @unique @db.VarChar(11)
  data_nasc  String       @db.VarChar(10)
  telefone   String       @db.VarChar(12)
  email      String       @unique @db.VarChar(100)
  formacao   String       @db.VarChar(100)
  prontuario prontuario[]
}
